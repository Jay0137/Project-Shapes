package com.example.myapplication.ui.upload;

import android.app.Activity;
import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.Fragment;

import com.example.myapplication.MainActivity;
import com.example.myapplication.R;
import com.example.myapplication.database.PostDao;
import com.example.myapplication.database.SessionManager;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;

public class UploadPostFragment extends Fragment {
    private static final int PICK_IMAGE_REQUEST = 1;
    private ImageView imageView;
    private Activity activity;
    private EditText editTextPost;
    private ImageView addpost;
    private PostDao postDao;

    // Default constructor
    public UploadPostFragment() {
        // Required empty public constructor
    }

    public UploadPostFragment(PostDao postDao) {
        this.postDao = postDao;
    }

    @Override
    public void onAttach(@NonNull Activity activity) {
        super.onAttach(activity);
        this.activity = activity;
    }

    @Override
    public void onDetach() {
        super.onDetach();
        activity = null;
    }

    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        View rootView = inflater.inflate(R.layout.fragment_add_post, container, false);

        editTextPost = rootView.findViewById(R.id.editTextPost);
        imageView = rootView.findViewById(R.id.upload);
        addpost = rootView.findViewById(R.id.AddPost);

        imageView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                openFileChooser();
            }
        });

        addpost.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                boolean postCreated = createPost();
                if (postCreated) {
                    // Navigate to the home page if the post was created successfully
                    // Replace MainActivity.class with your actual home page activity
                    Intent intent = new Intent(getActivity(), MainActivity.class);
                    startActivity(intent);
                    getActivity().finish(); // Optional: finish the current activity
                }
            }
        });

        return rootView;
    }

    private void openFileChooser() {
        Intent intent = new Intent(Intent.ACTION_PICK, android.provider.MediaStore.Images.Media.EXTERNAL_CONTENT_URI);
        startActivityForResult(intent, PICK_IMAGE_REQUEST);
    }


    @Override
    public void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (requestCode == PICK_IMAGE_REQUEST && resultCode == Activity.RESULT_OK && data != null && data.getData() != null) {
            // Get the selected image URI
            Uri selectedImageUri = data.getData();
            String imagePath = selectedImageUri.toString();
            // Display the selected image using Glide or any other image loading library
            // For now, let's just display a toast message with the image URI
            Toast.makeText(activity, "Selected image: " + imagePath, Toast.LENGTH_SHORT).show();
        }
    }


    private boolean createPost() {
        String text = editTextPost.getText().toString().trim();
        // Get the current date
        String date = new SimpleDateFormat("yyyy-MM-dd HH:mm", Locale.getDefault()).format(new Date());
        // Assuming you will get the image path after selecting an image from the gallery
        String imagePath = "path_to_image"; // You need to implement the logic to get the image path

        if (!text.isEmpty() && !imagePath.isEmpty()) {
            // Assuming the user id is available in your app (you need to implement this)
            int userId = getUserId(); // You need to implement the logic to get the user id
            long result = postDao.addPost(userId, text, imagePath, date);
            if (result != -1) {
                Toast.makeText(activity, "Post created successfully", Toast.LENGTH_SHORT).show();
                // Clear the EditText content after creating the post
                editTextPost.setText("");
                return true; // Return true if post creation was successful
            } else {
                Toast.makeText(activity, "Failed to create post", Toast.LENGTH_SHORT).show();
                return false; // Return false if post creation failed
            }
        } else {
            Toast.makeText(activity, "Please enter text and select an image", Toast.LENGTH_SHORT).show();
            return false; // Return false if either text or image path is empty
        }
    }

    private int getUserId() {
        // Assuming you have a SessionManager class to manage user sessions
        SessionManager sessionManager = new SessionManager(getActivity().getApplicationContext());

        // Get the user id from the session manager
        int userId = sessionManager.getUserId();

        return userId;
    }

    public void onDestroyView() {
        super.onDestroyView();
        // Clear EditText content when the fragment's view is destroyed
        editTextPost.setText("");
    }
}
